plugins {
    id 'java-library'
    id 'checkstyle'
    id 'pmd'
    id 'com.github.spotbugs' version '4.6.0'
    id 'net.researchgate.release' version '2.8.1'
}

ext.projectName = "Openbanking client"
ext.projectDescription = "Openbanking client"
ext.projectArtifactName = "openbanking-client"
ext.projectGitHubRepoName = "openbanking-client"

apply from: 'build.common.gradle'

group = 'com.transferwise'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

ext {
    libs = [
        'spring': '5.2.11.RELEASE',
        'jackson': '2.11.3',
        'lombok': '1.18.16',
        'junit': '5.6.3',
        'mockito': '3.6.0'
    ]
}

repositories {
    jcenter()
}

dependencies {
    api("org.springframework:spring-web:${libs.spring}")

    implementation('org.apache.httpcomponents:httpclient:4.5.13')

    api("com.fasterxml.jackson.core:jackson-annotations:${libs.jackson}")
    api("com.fasterxml.jackson.core:jackson-databind:${libs.jackson}")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${libs.jackson}")

    api('org.bitbucket.b_c:jose4j:0.7.2')

    compileOnly("org.projectlombok:lombok:${libs.lombok}")
    testCompileOnly("org.projectlombok:lombok:${libs.lombok}")
    annotationProcessor("org.projectlombok:lombok:${libs.lombok}")
    testAnnotationProcessor("org.projectlombok:lombok:${libs.lombok}")

    testImplementation("org.junit.jupiter:junit-jupiter:${libs.junit}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${libs.junit}")

    testImplementation("org.mockito:mockito-core:${libs.mockito}")
    testImplementation("org.mockito:mockito-junit-jupiter:${libs.mockito}")

    testImplementation("org.hamcrest:hamcrest:2.2")
    testImplementation("org.skyscreamer:jsonassert:1.5.0")

    testImplementation("org.springframework:spring-test:${libs.spring}")

    testImplementation("org.bouncycastle:bcpkix-jdk15on:1.67")
}

jar {
    doFirst {
        manifest {
            attributes("Implementation-Title": project.name, "Implementation-Version": project.version)
        }
    }
}

checkstyle {
    configFile = new File(rootDir, "checkstyle.xml")
    sourceSets = [project.sourceSets.main]
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

spotbugs {
    excludeFilter = file('spotbugs_exclude_filter.xml')
}

spotbugsMain {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

spotbugsTest {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

pmd {
    incrementalAnalysis = true
    ruleSetFiles = files("custom-pmd-rules.xml")
    ruleSets = []
}

tasks.withType(Pmd) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

wrapper {
    gradleVersion = '6.7.1'
}

release {
    failOnUnversionedFiles = true
    tagTemplate = '$name-$version'
    preTagCommitMessage = "[ci skip] pre tag commit: "
    tagCommitMessage = "[ci skip] creating tag: "
    newVersionCommitMessage = "[ci skip] new version commit: "
}

afterReleaseBuild.dependsOn publish

test {
    useJUnitPlatform()
}
