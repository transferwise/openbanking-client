/*
 * OBIE VRP Profile
 * VRP OpenAPI Specification
 *
 * OpenAPI spec version: 3.1.10
 * Contact: ServiceDesk@openbanking.org.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.transferwise.openbanking.client.api.payment.v3.model.vrp;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

/**
 * OBDomesticVRPControlParameters
 */

public class OBDomesticVRPControlParameters implements Serializable {
  private static final long serialVersionUID = 1L;

  @JsonProperty("ValidFromDateTime")
  private OffsetDateTime validFromDateTime;

  @JsonProperty("ValidToDateTime")
  private OffsetDateTime validToDateTime;

  @JsonProperty("MaximumIndividualAmount")
  private OBActiveOrHistoricCurrencyAndAmount maximumIndividualAmount = null;

  @JsonProperty("PeriodicLimits")
  private List<OBDomesticVRPControlParametersPeriodicLimits> periodicLimits = new ArrayList<>();

  @JsonProperty("VRPType")
  private List<OBVRPConsentType> vrPType = new ArrayList<>();

  @JsonProperty("PSUAuthenticationMethods")
  private List<OBVRPAuthenticationMethods> psUAuthenticationMethods = new ArrayList<>();

  @JsonProperty("PSUInteractionTypes")
  private List<OBVRPInteractionTypes> psUInteractionTypes = null;

  @JsonProperty("SupplementaryData")
  private Object supplementaryData = null;

  public OBDomesticVRPControlParameters validFromDateTime(OffsetDateTime validFromDateTime) {
    this.validFromDateTime = validFromDateTime;
    return this;
  }

   /**
   * ^ Start date time for which the consent remains valid.
   * @return validFromDateTime
  **/
  
  public OffsetDateTime getValidFromDateTime() {
    return validFromDateTime;
  }

  public void setValidFromDateTime(OffsetDateTime validFromDateTime) {
    this.validFromDateTime = validFromDateTime;
  }

  public OBDomesticVRPControlParameters validToDateTime(OffsetDateTime validToDateTime) {
    this.validToDateTime = validToDateTime;
    return this;
  }

   /**
   * ^ End date time for which the consent remains valid.
   * @return validToDateTime
  **/
  
  public OffsetDateTime getValidToDateTime() {
    return validToDateTime;
  }

  public void setValidToDateTime(OffsetDateTime validToDateTime) {
    this.validToDateTime = validToDateTime;
  }

  public OBDomesticVRPControlParameters maximumIndividualAmount(OBActiveOrHistoricCurrencyAndAmount maximumIndividualAmount) {
    this.maximumIndividualAmount = maximumIndividualAmount;
    return this;
  }

   /**
   * Get maximumIndividualAmount
   * @return maximumIndividualAmount
  **/
  
  public OBActiveOrHistoricCurrencyAndAmount getMaximumIndividualAmount() {
    return maximumIndividualAmount;
  }

  public void setMaximumIndividualAmount(OBActiveOrHistoricCurrencyAndAmount maximumIndividualAmount) {
    this.maximumIndividualAmount = maximumIndividualAmount;
  }

  public OBDomesticVRPControlParameters periodicLimits(List<OBDomesticVRPControlParametersPeriodicLimits> periodicLimits) {
    this.periodicLimits = periodicLimits;
    return this;
  }

  public OBDomesticVRPControlParameters addPeriodicLimitsItem(OBDomesticVRPControlParametersPeriodicLimits periodicLimitsItem) {
    this.periodicLimits.add(periodicLimitsItem);
    return this;
  }

   /**
   * Get periodicLimits
   * @return periodicLimits
  **/
  
  public List<OBDomesticVRPControlParametersPeriodicLimits> getPeriodicLimits() {
    return periodicLimits;
  }

  public void setPeriodicLimits(List<OBDomesticVRPControlParametersPeriodicLimits> periodicLimits) {
    this.periodicLimits = periodicLimits;
  }

  public OBDomesticVRPControlParameters vrPType(List<OBVRPConsentType> vrPType) {
    this.vrPType = vrPType;
    return this;
  }

  public OBDomesticVRPControlParameters addVrPTypeItem(OBVRPConsentType vrPTypeItem) {
    this.vrPType.add(vrPTypeItem);
    return this;
  }

   /**
   * ^ The types of payments that can be made under this VRP consent. This can be used to indicate whether this include sweeping payment or other ecommerce payments.
   * @return vrPType
  **/
  
  public List<OBVRPConsentType> getVrPType() {
    return vrPType;
  }

  public void setVrPType(List<OBVRPConsentType> vrPType) {
    this.vrPType = vrPType;
  }

  public OBDomesticVRPControlParameters psUAuthenticationMethods(List<OBVRPAuthenticationMethods> psUAuthenticationMethods) {
    this.psUAuthenticationMethods = psUAuthenticationMethods;
    return this;
  }

  public OBDomesticVRPControlParameters addPsUAuthenticationMethodsItem(OBVRPAuthenticationMethods psUAuthenticationMethodsItem) {
    this.psUAuthenticationMethods.add(psUAuthenticationMethodsItem);
    return this;
  }

   /**
   * ^ Indicates that the PSU authentication methods supported.
   * @return psUAuthenticationMethods
  **/
  
  public List<OBVRPAuthenticationMethods> getPsUAuthenticationMethods() {
    return psUAuthenticationMethods;
  }

  public void setPsUAuthenticationMethods(List<OBVRPAuthenticationMethods> psUAuthenticationMethods) {
    this.psUAuthenticationMethods = psUAuthenticationMethods;
  }

  public OBDomesticVRPControlParameters psUInteractionTypes(List<OBVRPInteractionTypes> psUInteractionTypes) {
    this.psUInteractionTypes = psUInteractionTypes;
    return this;
  }

  public OBDomesticVRPControlParameters addPsUInteractionTypesItem(OBVRPInteractionTypes psUInteractionTypesItem) {
    if (this.psUInteractionTypes == null) {
      this.psUInteractionTypes = new ArrayList<>();
    }
    this.psUInteractionTypes.add(psUInteractionTypesItem);
    return this;
  }

   /**
   * ^ Indicates interaction type, currently if customer is present or not present.
   * @return psUInteractionTypes
  **/
  
  public List<OBVRPInteractionTypes> getPsUInteractionTypes() {
    return psUInteractionTypes;
  }

  public void setPsUInteractionTypes(List<OBVRPInteractionTypes> psUInteractionTypes) {
    this.psUInteractionTypes = psUInteractionTypes;
  }

  public OBDomesticVRPControlParameters supplementaryData(Object supplementaryData) {
    this.supplementaryData = supplementaryData;
    return this;
  }

   /**
   * ^ Additional information that can not be captured in the structured fields and/or any other specific block
   * @return supplementaryData
  **/
  
  public Object getSupplementaryData() {
    return supplementaryData;
  }

  public void setSupplementaryData(Object supplementaryData) {
    this.supplementaryData = supplementaryData;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OBDomesticVRPControlParameters obDomesticVRPControlParameters = (OBDomesticVRPControlParameters) o;
    return Objects.equals(this.validFromDateTime, obDomesticVRPControlParameters.validFromDateTime) &&
        Objects.equals(this.validToDateTime, obDomesticVRPControlParameters.validToDateTime) &&
        Objects.equals(this.maximumIndividualAmount, obDomesticVRPControlParameters.maximumIndividualAmount) &&
        Objects.equals(this.periodicLimits, obDomesticVRPControlParameters.periodicLimits) &&
        Objects.equals(this.vrPType, obDomesticVRPControlParameters.vrPType) &&
        Objects.equals(this.psUAuthenticationMethods, obDomesticVRPControlParameters.psUAuthenticationMethods) &&
        Objects.equals(this.psUInteractionTypes, obDomesticVRPControlParameters.psUInteractionTypes) &&
        Objects.equals(this.supplementaryData, obDomesticVRPControlParameters.supplementaryData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(validFromDateTime, validToDateTime, maximumIndividualAmount, periodicLimits, vrPType, psUAuthenticationMethods, psUInteractionTypes, supplementaryData);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OBDomesticVRPControlParameters {\n");
    
    sb.append("    validFromDateTime: ").append(toIndentedString(validFromDateTime)).append("\n");
    sb.append("    validToDateTime: ").append(toIndentedString(validToDateTime)).append("\n");
    sb.append("    maximumIndividualAmount: ").append(toIndentedString(maximumIndividualAmount)).append("\n");
    sb.append("    periodicLimits: ").append(toIndentedString(periodicLimits)).append("\n");
    sb.append("    vrPType: ").append(toIndentedString(vrPType)).append("\n");
    sb.append("    psUAuthenticationMethods: ").append(toIndentedString(psUAuthenticationMethods)).append("\n");
    sb.append("    psUInteractionTypes: ").append(toIndentedString(psUInteractionTypes)).append("\n");
    sb.append("    supplementaryData: ").append(toIndentedString(supplementaryData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

