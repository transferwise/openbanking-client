/*
 * OBIE VRP Profile
 * VRP OpenAPI Specification
 *
 * OpenAPI spec version: 3.1.9
 * Contact: ServiceDesk@openbanking.org.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.transferwise.openbanking.client.api.payment.v3.model.vrp;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import java.io.Serializable;

/**
 * OBDomesticVRPConsentRequestData
 */

public class OBDomesticVRPConsentRequestData implements Serializable {
  private static final long serialVersionUID = 1L;

  /**
   * Indicates whether information about RefundAccount should be included in the payment response. 
   */
  public enum ReadRefundAccountEnum {
    YES("Yes"),
    
    NO("No");

    private String value;

    ReadRefundAccountEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ReadRefundAccountEnum fromValue(String text) {
      for (ReadRefundAccountEnum b : ReadRefundAccountEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + text + "'");
    }
  }

  @JsonProperty("ReadRefundAccount")
  private ReadRefundAccountEnum readRefundAccount;

  @JsonProperty("ControlParameters")
  private OBDomesticVRPControlParameters controlParameters = null;

  @JsonProperty("Initiation")
  private OBDomesticVRPInitiation initiation = null;

  public OBDomesticVRPConsentRequestData readRefundAccount(ReadRefundAccountEnum readRefundAccount) {
    this.readRefundAccount = readRefundAccount;
    return this;
  }

   /**
   * Indicates whether information about RefundAccount should be included in the payment response. 
   * @return readRefundAccount
  **/
  
  public ReadRefundAccountEnum getReadRefundAccount() {
    return readRefundAccount;
  }

  public void setReadRefundAccount(ReadRefundAccountEnum readRefundAccount) {
    this.readRefundAccount = readRefundAccount;
  }

  public OBDomesticVRPConsentRequestData controlParameters(OBDomesticVRPControlParameters controlParameters) {
    this.controlParameters = controlParameters;
    return this;
  }

   /**
   * Get controlParameters
   * @return controlParameters
  **/
  
  public OBDomesticVRPControlParameters getControlParameters() {
    return controlParameters;
  }

  public void setControlParameters(OBDomesticVRPControlParameters controlParameters) {
    this.controlParameters = controlParameters;
  }

  public OBDomesticVRPConsentRequestData initiation(OBDomesticVRPInitiation initiation) {
    this.initiation = initiation;
    return this;
  }

   /**
   * Get initiation
   * @return initiation
  **/
  
  public OBDomesticVRPInitiation getInitiation() {
    return initiation;
  }

  public void setInitiation(OBDomesticVRPInitiation initiation) {
    this.initiation = initiation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OBDomesticVRPConsentRequestData obDomesticVRPConsentRequestData = (OBDomesticVRPConsentRequestData) o;
    return Objects.equals(this.readRefundAccount, obDomesticVRPConsentRequestData.readRefundAccount) &&
        Objects.equals(this.controlParameters, obDomesticVRPConsentRequestData.controlParameters) &&
        Objects.equals(this.initiation, obDomesticVRPConsentRequestData.initiation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(readRefundAccount, controlParameters, initiation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OBDomesticVRPConsentRequestData {\n");
    
    sb.append("    readRefundAccount: ").append(toIndentedString(readRefundAccount)).append("\n");
    sb.append("    controlParameters: ").append(toIndentedString(controlParameters)).append("\n");
    sb.append("    initiation: ").append(toIndentedString(initiation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

