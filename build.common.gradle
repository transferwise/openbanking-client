ext.sonatypeUser = project.hasProperty("sonatypeUser") ? project.sonatypeUser : System.env.SONATYPE_USER as String
ext.sonatypePassword = project.hasProperty("sonatypePassword") ? project.sonatypePassword : System.env.SONATYPE_PASSWORD as String

ext.projectScmUrl = "https://github.com/transferwise/${projectGitHubRepoName}"
ext.projectScmConnection = "scm:git:git://github.com/transferwise/${projectGitHubRepoName}.git"

buildscript {
	repositories {
		mavenLocal()
	}
}

apply plugin: "maven-publish"

/* block for oss publication */
apply plugin: "signing"
/* end */

repositories {
	mavenLocal()
}

java {
	withSourcesJar()
	withJavadocJar()
}

jar {
	manifest {
		attributes(
				"Implementation-Title": projectName,
				"Implementation-Version": archiveVersion
		)
	}
}

compileJava {
	options.encoding = 'utf-8'
	options.compilerArgs << '-parameters'
	options.compilerArgs << '-Xlint'
	options.compilerArgs << '-Xlint:-processing'
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
			afterEvaluate {
				artifactId = projectArtifactName
			}

			pom {
				name = projectName
				description = projectDescription
				url = projectScmUrl
				packaging = "jar"
				licenses {
					license {
						name = 'The Apache License, Version 2.0, Copyright 2019 TransferWise Ltd'
						url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}
				developers {
					developer {
						id = authorGithub
						name = authorName
						email = authorEmail
						organization = "Transferwise Ltd"
						organizationUrl = "https://github.com/transferwise"
					}
				}
				scm {
					connection = projectScmConnection
					developerConnection = projectScmConnection
					url = projectScmUrl
				}
			}
		}
	}

	/* block for oss publication */
	signing {
		sign publishing.publications.mavenJava
	}
	/* end */

	javadoc {
		if (JavaVersion.current().isJava9Compatible()) {
			options.addBooleanOption('html5', true)
		}
	}

	repositories {
		/* block for oss publication */
		maven {
			url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
			credentials {
				username = sonatypeUser
				password = sonatypePassword
			}
		}
		/* end */
	}
}
